name: Deploy with Docker

on:
  workflow_dispatch:
    inputs:
      password:
        description: '배포를 위한 password 를 입력하세요'
        required: true
        type: string

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/myproject
  VERSION: ${{ github.sha }}
  NAME: newproject
  BUILD_SECRET: qwer

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /home/runner/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, lecture ]
    steps:
      - name: Check secret
        run: |
          if [ "${{ github.event.inputs.password }}" != "${{ env.BUILD_SECRET }}" ]; then
            echo "Passwords do not match."
            exit 1
          else
            echo "Passwords match."
          fi

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} || true && docker rm ${{ env.NAME }} || true && docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8000:8000 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest
